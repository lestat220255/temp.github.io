---
layout:     post
title:      "近期工作中的收获"
subtitle:   "掌握的技能以vue框架为主要部分"
date:       2018-02-07 17:18:00
author:     "Lestat"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
    - 工作记录
---


眼下快要过年了,手头的项目也终于接近尾声,抽点时间来记录下近段时间的工作心得  
前段时间在工作之余我抽空看了一些[ECMA6](http://es6.ruanyifeng.com/)的语法,简单学习了一下[webpack](https://doc.webpack-china.org/),了解了[babel](https://babeljs.cn/),后面也尝试着使用[vue-cli](https://github.com/vuejs/vue-cli)搭建自己的demo并熟悉其中的结构  

说说最近做的一个项目:一个接口开发(前端)项目,接口由客户提供(java开发,json数据格式),我方负责移动端web开发和后台页面的开发,并调试好所有接口(后端接口情况:权限相关[14],会员模块[10],片库[14],,出品[19],媒体[15],资讯[11],直通车[14],ip活动[12],营销联盟[13])  
刚拿到需求的时候我还是比较担心能否搞定,毕竟作为一个phper之前的确没有搞过spa的开发,但之前做了那么多spa的功课,也觉得是时候真正的实践一下了,于是很快找到了一个基于[vue](https://cn.vuejs.org/index.html)+[elementui](http://element-cn.eleme.io/#/zh-CN/component/installation)的后台框架[vue-element-admin](https://github.com/PanJiaChen/vue-element-admin),**据我最近观察,这个项目在github上每天平均增加将近100个star...**  

这个框架替我们完成了很多基本方法的封装,路由访问权限,页眉标签切换,常用的各种表格,表单等;开发起来效率相对较高,在我后来实际的开发中也应证了这点  
最后花了两周时间,搭建了一个小型后台管理系统并完成所有接口的调试  
使用vue做开发的感觉就是代码比曾经用jq的项目更规范(也可能是因为框架中引入了eslint,配合vscode的eslint+prettier一键格式化,实现简单操作就能遵循eslint代码规范);由于vue-cli已经将webpack,babel打包好,并且实现了`ctrl`+`s`自动刷新页面预览且不会清空`console`里面的内容,开发的体验变得非常好。  
强烈推荐chrome的`Vue DevTools`插件,安装完成后可以在chrome右上方看到vue的logo,在dev模式下的页面可以直接看到开发者工具的标签栏多出一个Vue标签,点击即可查看到当前页面的信息!  

目前为止,自己对vue的了解还不够深入,对vuex,组件的使用还不够灵活,还需要更多的实践  

**新的一年,继续加油!**

![](https://lestat.b0.upaiyun.com/blog/dontgiveup.png)